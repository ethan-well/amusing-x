syntax = "proto3";

option go_package = "amusingx.fit/amusingx/protos/pangu/service/pangu/proto";

import "google/api/annotations.proto";
import "pangu/proto/category_create.proto";
import "pangu/proto/category_list.proto";
import "pangu/proto/category_delete.proto";
import "pangu/proto/category.proto";
import "pangu/proto/category_update.proto";
import "pangu/proto/oauth_login.proto";
import "pangu/proto/oauth_provider_info.proto";
import "pangu/proto/logout.proto";
import "comm/response/response.proto";

import "pangu/proto/product_create.proto";
import "pangu/proto/product_get.proto";
import "pangu/proto/product_delete.proto";
import "pangu/proto/product_list.proto";
import "pangu/proto/product_update.proto";

import "pangu/proto/sub_product_create.proto";
import "pangu/proto/sub_product_get.proto";
import "pangu/proto/sub_product_delete.proto";
import "pangu/proto/sub_product_list.proto";
import "pangu/proto/sub_product_update.proto";

import "pangu/proto/attribute_create.proto";
import "pangu/proto/attribute_get.proto";
import "pangu/proto/attribute_delete.proto";
import "pangu/proto/attribute_list.proto";
import "pangu/proto/attribute_update.proto";

import "pangu/proto/attribute_mapping_get.proto";
import "pangu/proto/attribute_mapping_delete.proto";
import "pangu/proto/attribute_mapping_list.proto";
import "pangu/proto/attribute_mapping_update.proto";
import "pangu/proto/attribute_mapping_create.proto";

package panguservice;

message BlankParams{}

message PongResponse {
  string serverName = 1;
}

service PanGuService {
  rpc Pong(BlankParams) returns (PongResponse) {
    option (google.api.http) = {
      get: "/v1/pangu/pong"
    };
  }

  rpc CategoryCreate(CategoryCreateRequest) returns (CategoryCreateResponse) {
    option (google.api.http) = {
      post: "/v1/pangu/categories"
      body: "*"
    };
  }

   rpc CategoriesDelete(CategoriesDeleteRequest) returns (comm.response.CommResponse) {
      option (google.api.http) = {
        delete: "/v1/pangu/categories"
      };
    }

  rpc Category(CategoryRequest) returns (CategoryResponse) {
    option (google.api.http) = {
      get: "/v1/pangu/categories/{id}"
    };
  }

  rpc CategoryList(CategoryListRequest) returns (CategoryListResponse) {
    option(google.api.http) = {
      get: "/v1/pangu/categories"
    };
  }

  rpc CategoryDelete(CategoryDeleteRequest) returns (comm.response.CommResponse) {
    option(google.api.http) = {
      delete: "/v1/pangu/categories/{id}"
    };
  }

  rpc CategoryUpdate(CategoryUpdateRequest) returns (CategoryUpdateResponse) {
    option(google.api.http) = {
      put: "/v1/pangu/categories/{id}"
      body: "*"
    };
  }

  rpc OauthLogin(OAuthLoginRequest) returns (OAuthLoginResponse) {
    option(google.api.http) = {
      post: "/v1/pangu/oauth/login"
      body: "*"
    };
  }

  rpc OauthProviderInfo(OauthProviderInfoRequest) returns (OAuthProviderInfoResponse) {
    option(google.api.http) = {
      get: "/v1/pangu/oauth/provider/info"
    };
  }

  rpc Logout(BlankParams) returns (LogoutResponse) {
    option(google.api.http) = {
      post: "/v1/pangu/logout"
      body: "*"
    };
  }

  rpc ProductCreate(ProductCreateRequest) returns (comm.response.CommResponse) {
      option (google.api.http) = {
        post: "/v1/pangu/products"
        body: "*"
      };
    }

  rpc Product(ProductRequest) returns (comm.response.CommResponse) {
      option (google.api.http) = {
        get: "/v1/pangu/products/{id}"
      };
  }

  rpc Products(ProductListRequest) returns (comm.response.CommResponse) {
      option(google.api.http) = {
        get: "/v1/pangu/products"
      };
  }

  rpc ProductDelete(ProductDeleteRequest) returns (comm.response.CommResponse) {
      option(google.api.http) = {
        delete: "/v1/pangu/products/{id}"
      };
  }

  rpc ProductsDelete(ProductsDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          delete: "/v1/pangu/products"
        };
    }

  rpc ProductUpdate(ProductUpdateRequest) returns (comm.response.CommResponse) {
      option(google.api.http) = {
        put: "/v1/pangu/products/{id}"
        body: "*"
      };
  }

  rpc SubProductCreate(SubProductCreateRequest) returns (comm.response.CommResponse) {
        option (google.api.http) = {
          post: "/v1/pangu/sub_products"
          body: "*"
        };
  }

  rpc SubProduct(SubProductRequest) returns (comm.response.CommResponse) {
        option (google.api.http) = {
          get: "/v1/pangu/sub_products/{id}"
        };
    }

    rpc SubProducts(SubProductListRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          get: "/v1/pangu/sub_products"
        };
    }

    rpc SubProductDelete(SubProductDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          delete: "/v1/pangu/sub_products/{id}"
        };
    }

    rpc SubProductsDelete(SubProductsDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
            delete: "/v1/pangu/sub_products"
        };
    }

    rpc SubProductUpdate(SubProductUpdateRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          put: "/v1/pangu/sub_products/{id}"
          body: "*"
        };
    }


  rpc AttributeCreate(AttributeCreateRequest) returns (comm.response.CommResponse) {
        option (google.api.http) = {
          post: "/v1/pangu/attributes"
          body: "*"
        };
  }

  rpc Attribute(AttributeRequest) returns (comm.response.CommResponse) {
    option (google.api.http) = {
      get: "/v1/pangu/attributes/{id}"
    };
  }

    rpc Attributes(AttributeListRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          get: "/v1/pangu/attributes"
        };
    }

    rpc AttributeDelete(AttributeDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          delete: "/v1/pangu/attributes/{id}"
        };
    }

    rpc AttributesDelete(AttributesDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          delete: "/v1/pangu/attributes"
        };
    }

    rpc AttributeUpdate(AttributeUpdateRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
          put: "/v1/pangu/attributes/{id}"
          body: "*"
        };
    }

    rpc AttributeMappingCreate(AttributeMappingCreateRequest) returns (comm.response.CommResponse) {
        option (google.api.http) = {
            post: "/v1/pangu/attribute_mappings"
            body: "*"
        };
    }

    rpc AttributeMapping(AttributeMappingRequest) returns (comm.response.CommResponse) {
        option (google.api.http) = {
            get: "/v1/pangu/attribute_mappings/{id}"
        };
    }

    rpc AttributeMappings(AttributeMappingListRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
            get: "/v1/pangu/attribute_mappings"
        };
    }

    rpc AttributeMappingDelete(AttributeMappingDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
            delete: "/v1/pangu/attribute_mappings/{id}"
        };
    }

    rpc AttributeMappingsDelete(AttributeMappingsDeleteRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
            delete: "/v1/pangu/attribute_mappings"
        };
    }

    rpc AttributeMappingUpdate(AttributeMappingUpdateRequest) returns (comm.response.CommResponse) {
        option(google.api.http) = {
            put: "/v1/pangu/attribute_mappings/{id}"
            body: "*"
        };
    }
}